version: '3.8'
#containers => services
services:
  mysql-springboot-container:
    image: mysql:latest
    container_name: mysql-springboot-container
    ports:
      - 3310:3306
    volumes:
      #      - C:/db/:/var/lib/mysql
      - mysql-springboot-data:/var/lib/mysql
      - mysql-springboot-config-deamond:/etc/mysql/conf.d
      - C:/Users/DTN/.aws:/root/.aws:ro
    networks:
      - backend
    env_file:
      - ./properties.env
  sell_product-docker-container:
    build:
      context: .
      dockerfile: Dockerfile
    image: 0398927895/sell_product-docker:latest #0398927895/sell_product-docker:v1.0.0
    container_name: sell_product-docker-container
    ports:
      - 8086:8080
    volumes:
      - ./:/app
    networks:
      - backend
    env_file:
      - ./properties.env
#create networks
networks:
  backend:
    name: sell_product-app-network
volumes:
  mysql-springboot-data:
  mysql-springboot-config-deamond:

#Remove container
#docker rm -f mysql-springboot-container sell_product-docker-container

#Run docker compose
#docker-compose -f docker-compose.yml up --build
